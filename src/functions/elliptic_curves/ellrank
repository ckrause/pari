Function: ellrank
Section: elliptic_curves
C-Name: ellrank
Prototype: GD0,L,DGp
Help: ellrank(E,{effort=0},{points}): if E is an elliptic curve over Q,
 attempt to compute the Mordell-Weil group attached to the curve.
 The output is [r,R,L] such that the rank is between r and R (both included)
 and L is a list of independent, non-torsion rational points on the curve.
 E can also be given as the output of ellrankinit(E).
Doc: if $E$ is an elliptic curve over $\Q$,
 attempt to compute the Mordell-Weil group attached to the curve.
 The output is $[r,R,L]$ such that the rank is between $r$ and $R$
 (both included) and $L$ is a list of independent, non-torsion rational points
 on the curve.
 $E$ can also be given as the output of \kbd{ellrankinit(E)}.
 If \kbd{points} is present, it must be a vector of rational points on the
 curve. The parameter \kbd{effort} is a measure of the effort done to find
 rational points before giving up. If \kbd{effort} is not $0$, the search is
 randomized, so rerunning the function might find different or even
 extra points. Values up to $10$ or so are sensible but the parameter can be
 increased futher: running times increase roughly like the \emph{cube} of the
 \kbd{effort} value.

 \bprog
 ? E = ellinit([-127^2,0]);
 ? ellrank(E)
 %2 = [1,1,[]] \\ rank is 1 but no point has been found.
 ? ellrank(E,4) \\ with more effort we find a point.
 %3 = [1,1,[[38902300445163190028032/305111826865145547009,
      680061120400889506109527474197680/5329525731816164537079693913473]]]
 @eprog

 Finally, $E$ can be a pair $[e, K]$, where $K$ is a non-zero integer and
 $e: y^2 = x^3 + a_2 x^2 + a_4 x + a_6$
 is an elliptic curve with $a_1$ and $a_3$ coefficients equal to $0$, as
 given by \kbd{ellinit} or \kbd{ellrankinit}. We then look for points on
 the quadratic twist $K y^2 = x^3 + a_2 x^2 + a_4 x + a_6$.
 Note that the \kbd{ellrankinit} initialization is independant of $K$!

 \misctitle{Technical explanation:}
 The algorithm uses $2$-descent which has an intrinsic limitation:
 $R$ is equal to the sum of the rank of $E$ and of the $2$-rank of the
 Tate-Shafarevich group (which is conjecturally even). In particular we can
 never have $r = R$ when the Tate-Shafarevic group has $2$-torsion.

 When the conductor of $E$ is small, the BSD conjecture can be used
 to find the true rank:
 \bprog
 ? E=ellinit([-289,0]);
 ? ellrootno(E) \\ rank is even (parity conjecture)
 %2 = 1
 ? ellrank(E)
 %3 = [0, 2, []] \\ rank is either 0 or 2
 ? ellrank(E, 3) \\ try harder
 %4 = [0, 2, []] \\ no luck
 ? [r,L] = ellanalyticrank(E) \\ assume BSD
 %5 = [0, 2.5437...]
 ? L / ellbsd(E) \\ analytic rank is 0, compute Sha
 %6 = 4.0000000000000000000000000000000000000
 @eprog
 We find that the rank is $0$ and the cardinal of the Tate-Shafarevich group
 is $4$ (assuming BSD!).

 When the rank is $1$ and the conductor is small, \kbd{ellheegner} can be used
 to find the point.
 \bprog
  ? E = ellinit([-157^2,0]);
  ? ellrank(E)
  %2 = [1, 1, []] \\ rank is 1, no point found
  ? ellrank(E, 5) \\ Try harder
  time = 4,321 ms.
  %3 = [1, 1, []] \\ No luck
  ? ellheegner(E) \\ use analytic method
  time = 608 ms.
  %4 = [69648970982596494254458225/166136231668185267540804, ...]
 @eprog\noindent In this last example, an \kbd{effort} about 10 would also
 find a random point (not necessarily the Heegner point) in 5 to 20 seconds.
