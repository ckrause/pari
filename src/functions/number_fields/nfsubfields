Function: nfsubfields
Section: number_fields
C-Name: nfsubfields
Prototype: GD0,L,
Help: nfsubfields(pol,{d=0}): find all subfields of degree d of number field
 defined by pol (all subfields if d is null or omitted). Result is a vector of
 subfields, each being given by [g,h], where g is an absolute equation and h
 expresses one of the roots of g in terms of the root x of the polynomial
 defining nf.
Doc: finds all subfields of degree
 $d$ of the number field defined by the (monic, integral) polynomial
 \var{pol} (all subfields if $d$ is null or omitted). The result is a vector
 of subfields, each being given by $[g,h]$, where $g$ is an absolute equation
 and $h$ expresses one of the roots of $g$ in terms of the root $x$ of the
 polynomial defining $\var{nf}$. This routine uses

 \item Allombert's \tet{galoissubfields} when \var{nf} is Galois (with weakly
 supersolvable Galois group).\sidx{Galois}\sidx{subfield}

 \item Kl\"uners's or van Hoeij--Kl\"uners--Novocin algorithm
 in the general case. The latter runs in polynomial time and is generally
 superior unless there exists a small unramified prime $p$ such that \var{pol}
 has few irreducible factors modulo $p$.

 An input of the form~\kbd{[nf, fa]} is also allowed, where~\kbd{fa} is the
 factorisation of~\var{nf.pol} over~\var{nf}, in which case the
 van Hoeij--Kl\"uners--Novocin algorithm is used.

 \bprog
 ? pol = x^4 - x^3 - x^2 + x + 1;
 ? nfsubfields(pol)
 %2 = [[x, 0], [x^2 - x + 1, x^3 - x^2 + 1], [x^4 - x^3 - x^2 + x + 1, x]]
 ? y=varhigher("y"); fa = nffactor(pol,subst(pol,x,y));
 ? #nfsubfields([pol,fa])
 %4 = 3
 @eprog

