Function: qfbsolve
Section: number_theoretical
C-Name: qfbsolve
Prototype: GGD0,L,
Help: qfbsolve(Q,n,{fl=0}): Solve the equation
 Q(x,y)=n in coprime integers x and y where Q is a binary quadratic form,
 up to the action of the special orthogonal group of Q over the integers.
 If fl=0, return a single solution or [] (no solution).
 If fl=1, return all the solutions.
Doc: Solve the equation $Q(x,y)=n$ in coprime integers $x$ and $y$, where
 $Q$ is a binary quadratic form and $n$ an integer, up to the action of the
 special orthogonal group $S=SO(Q,\Z)$, which is isomorphic to the group of
 units of positive norm of the quadratic order of discriminant $D = \disc Q$.

 If $\fl=0$, return a single solution or $[]$ (no solution).
 If $\fl=1$, the result is a vector of two-components vectors $[x,y]$.

 If $D>0$, $S$ is infinite. If $D<-4$, $S$ is of order $2$, if $D=-3$, $S$ is
 of order $6$ and if $D=-4$, $S$ is of order $4$.

 The integer $n$ can be given by its factorization matrix.

 \bprog
 ? qfbsolve(Qfb(1,0,2),201,1)
 %1 = [[-13,-4],[-1,10],[-1,-10],[-13,4]]
 ? N=2^128+1;F=factor(N);
 ? qfbsolve(Qfb(1,0,1),[N,F],1)
 %3 = [[-16382350221535464479,8479443857936402504],
       [18446744073709551616,-1],[-18446744073709551616,-1],
       [16382350221535464479,8479443857936402504]]
 @eprog

 Assuming the factorisation of $n$ is given, for each prime factor $p$ of $n$,
 the algorithm used runs in probabilistic polynomial time
 in $p$ (through the computation of square roots of $D$ modulo $4\*p$); it is
 polynomial time in $D$ if $Q$ is imaginary, but exponential time if $Q$ is
 real (through the computation of a full cycle of reduced forms). In the
 latter case, note that \tet{bnfisprincipal} provides a solution in heuristic
 subexponential time in $D$ assuming the GRH.
